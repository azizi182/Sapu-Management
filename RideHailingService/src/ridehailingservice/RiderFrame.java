/*
 *
 */
package ridehailingservice;

import javax.swing.JOptionPane;



public class RiderFrame extends javax.swing.JFrame {

    private String nameR, idR, available;
    manageQueue mq = manageQueue.getInst();
    Database db;
    MainFrame f1;

    public RiderFrame() {

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        NameRiderTF = new javax.swing.JTextField();
        IdRiderTF = new javax.swing.JTextField();
        AddRiderBTN = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayArea = new javax.swing.JTextArea();
        DisplayB = new javax.swing.JButton();
        BackBTN = new javax.swing.JButton();
        availableRB = new javax.swing.JRadioButton();
        notavailableRB = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("RIDER FRAME");

        jLabel2.setText("NAME : ");

        jLabel3.setText("ID : ");

        jLabel4.setText("Available : ");

        NameRiderTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameRiderTFActionPerformed(evt);
            }
        });

        AddRiderBTN.setText("ADD");
        AddRiderBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddRiderBTNActionPerformed(evt);
            }
        });

        displayArea.setColumns(20);
        displayArea.setRows(5);
        jScrollPane1.setViewportView(displayArea);

        DisplayB.setText("DISPLAY");
        DisplayB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayBActionPerformed(evt);
            }
        });

        BackBTN.setText("BACK");
        BackBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBTNActionPerformed(evt);
            }
        });

        buttonGroup1.add(availableRB);
        availableRB.setText("Available");
        availableRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                availableRBActionPerformed(evt);
            }
        });

        buttonGroup1.add(notavailableRB);
        notavailableRB.setText("Not Available");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(439, 439, 439)
                .addComponent(jLabel1)
                .addContainerGap(327, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(NameRiderTF)
                            .addComponent(IdRiderTF, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(AddRiderBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(DisplayB))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(notavailableRB)
                            .addComponent(availableRB)))
                    .addComponent(BackBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(NameRiderTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(IdRiderTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(availableRB))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(notavailableRB)
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AddRiderBTN)
                            .addComponent(DisplayB))
                        .addGap(93, 93, 93)
                        .addComponent(BackBTN))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 56, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NameRiderTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameRiderTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NameRiderTFActionPerformed

    private void AddRiderBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddRiderBTNActionPerformed

        nameR = NameRiderTF.getText();
        idR = IdRiderTF.getText();

        if (nameR.isEmpty() || idR.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter both Name and Id.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; 
        }
        if (!availableRB.isSelected() && !notavailableRB.isSelected()) {
            JOptionPane.showMessageDialog(null, "Please select a Rate (Normal or MyKad).", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; 
        }
        
        if (availableRB.isSelected()) {
            available = "Available";
        }
        if (notavailableRB.isSelected()) {
            available = "Not Available";
        }

        mq.enqueueRider(new RiderClass(nameR, idR, available));

        NameRiderTF.setText("");
        IdRiderTF.setText("");
        buttonGroup1.clearSelection();
        
    }//GEN-LAST:event_AddRiderBTNActionPerformed

    private void DisplayBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayBActionPerformed

        StringBuilder result = new StringBuilder();

        for (RiderClass rider : mq.getRiderQueue()) {

            result.append(rider.toString()).append("\n");

        }
        displayArea.setText(result.toString());
        
       // System.out.println(mq.getFrontR());

    }//GEN-LAST:event_DisplayBActionPerformed

    private void BackBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBTNActionPerformed

        f1 = new MainFrame();
        setVisible(false);
        f1.setVisible(true);
    }//GEN-LAST:event_BackBTNActionPerformed

    private void availableRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_availableRBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_availableRBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RiderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RiderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RiderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RiderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RiderFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddRiderBTN;
    private javax.swing.JButton BackBTN;
    private javax.swing.JButton DisplayB;
    private javax.swing.JTextField IdRiderTF;
    private javax.swing.JTextField NameRiderTF;
    private javax.swing.JRadioButton availableRB;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextArea displayArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton notavailableRB;
    // End of variables declaration//GEN-END:variables
}
